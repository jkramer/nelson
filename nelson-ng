#!/usr/bin/env perl

use strict;
use warnings;

use Config::Simple;
use Getopt::Long::Descriptive;

use Nelson;

my ($opt, $usage) = describe_options(
	"$0 %c %o",
	[ 'config|f=s', 'Configuration file' ],
	[ 'host|h=s', 'IRC host' ],
	[ 'port|p=s', 'IRC port' ],
	[ 'nick|n=s', 'IRC nick' ],
	[ 'channel|c=s', 'IRC channel' ],
	[ 'password|P=s', 'IRC password' ],
	[ 'bind|b=s', 'Bind address' ],
);

# Find readable configuration file.
my ($cfg_path) = grep {
	defined($_) and -r $_
} $opt->config, 'nelson.ini', $ENV{HOME} . '/.nelson.ini', '/etc/nelson.ini';

die "No readable configuration found.\n" unless $cfg_path;

my $cfg = new Config::Simple($cfg_path);

# Override configuration with command line options.
$cfg->param('irc.host'     => $opt->host) if($opt->host);
$cfg->param('irc.port'     => $opt->port) if($opt->port);
$cfg->param('irc.nick'     => $opt->nick) if($opt->nick);
$cfg->param('irc.channel'  => $opt->channel) if($opt->channel);
$cfg->param('irc.password' => $opt->password) if($opt->password);
$cfg->param('irc.bind' => $opt->bind) if($opt->bind);

# Set defaults unless overridden.
$cfg->param('irc.port' => 6667    ) unless $cfg->param('irc.port' ) ;
$cfg->param('irc.nick' => 'nelson') unless $cfg->param('irc.nick' ) ;

# Basic configuration checks.
# Required settings.
my %req = (
	( map { $_ => 'irc.' . $_ } qw( host nick channel ) ),
	database => 'database.source',
);

while(my ($k, $v) = each %req) {
	die "No $k.\n" unless $cfg->param($v);
}


my $nelson = Nelson->new;

# Run it.
$nelson->setup($cfg->vars);

while(1) {
	$nelson->run;

	print "Fell out of the loop. Let's try again in a few seconds.\n";
	sleep 10;
}
